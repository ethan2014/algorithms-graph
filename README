Ethan Lape
Brett Tomcko

compiling:
1) requires a c++14 compiler, we used gcc 4.9.2
2) no external libraries are needed
3) a simple Makefile is supplied, so just type `make' and it should build

running:
./graph [file]
where file is the name of the input graph file you wish to load from.

input graph:
the graph specified in the text file to be read by the Graph class must
be fully connected for all of the functionality to work properly, if there
are any nodes without neighbors and with nothing pointing to them, you will
get a Segmentation fault when running certain algorithms such as minimum
spanning tree and shortest path.  a valid graph is given in the graph.txt file.

graph file format:
Although our Graph implementation can create graphs with any type
for the node and edge values, the graph file is much more simple,
it expects a Graph<int, int> type.  the format of the file is:

nodes:
1
2
3
...
n
edges:
1 2 3
1 3 4
1 5 2
2 3 5
...
u v e

where the n is the last node that you want to add to the graph.
for edges, u is the first node in the edge, v is the second node
and e is the weight of the edge, both u and v must have been
created in the nodes section of the file first.  do not actually
include a '...' in the file.